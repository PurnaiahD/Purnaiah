{
	"info": {
		"_postman_id": "69da892f-d025-4d1b-873b-5ceae7e6e5c7",
		"name": "Postman Test collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29299345",
		"_collection_link": "https://bold-crater-348810.postman.co/workspace/ManualCreation~c14b2180-b2b1-4cdd-985e-d8efab1941b9/collection/29299345-69da892f-d025-4d1b-873b-5ceae7e6e5c7?action=share&source=collection_link&creator=29299345"
	},
	"item": [
		{
			"name": "Create new request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Create request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(11);\r",
							"});\r",
							"pm.test(\"Verify email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(\"Julianne.OConner@kory.org\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": 16,\r\n        \"name\": \"Patricia google\",\r\n        \"username\": \"Test Google\",\r\n        \"email\": \"Julianne.OConner@kory.org\",\r\n        \"address\": {\r\n            \"street\": \"Hoeger Mall\",\r\n            \"suite\": \"Apt. 692\",\r\n            \"city\": \"South Elvis\",\r\n            \"zipcode\": \"53919-4257\",\r\n            \"geo\": {\r\n                \"lat\": \"29.4572\",\r\n                \"lng\": \"-164.2990\"\r\n            }\r\n        },\r\n        \"phone\": \"831055828222\",\r\n        \"website\": \"kale.biz\",\r\n        \"company\": {\r\n            \"name\": \"Robel-Corkery\",\r\n            \"catchPhrase\": \"Multi-tiered zero tolerance productivity\",\r\n            \"bs\": \"transition cutting-edge web services\"\r\n        }\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get requests",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Perametarised get request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check peremetarised get request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].id).to.eql(3);\r",
							"});\r",
							"\r",
							"    pm.test(\"Check if user with id1 is Leanne Graham\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData[0].name).to.eql(\"Leanne Graham\");\r",
							"    });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	]
}